@using System.Text.Encodings.Web
<form asp-route="Search" method="get" id="small-search-box-form">
    <input type="text" class="search-box-text" id="small-searchterms" autocomplete="off" name="q" placeholder="@T("Search.SearchBox.Tooltip")" aria-label="@T("Search.SearchBox.Text.Label")" />
    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.SearchBoxBeforeSearchButton })
    <input type="submit" class="button-1 search-box-button" value="@T("Search.Button")" />

    <script asp-location="Footer">
        $(document).ready(function() {
            var showLinkToResultSearch;
            var searchText;
            $('#small-searchterms').autocomplete({
                    delay: 500,
                    minLength: 3,
                    source: '@(Url.RouteUrl("SearchAutoComplete"))',
                    appendTo: '.search-box',
                    select: function(event, ui) {
                        $("#small-searchterms").val(ui.item.label);
                        setLocation(ui.item.producturl);
                        return false;
                },
                //append link to the end of list
                open: function(event, ui) {
                    //display link to search page
                    if (showLinkToResultSearch) {
                        searchText = document.getElementById("small-searchterms").value;
                        $(".ui-autocomplete").append("<li class=\"ui-menu-item\" role=\"presentation\"><a href=\"/search?q=" + searchText + "\">@T("Search.SearchBox.SearchPageLink")</a></li>");
                    }
                }
            })
            .data("ui-autocomplete")._renderItem = function(ul, item) {
                var t = item.Title;
                showLinkToResultSearch = item.Route;
                //html encode
                t = htmlEncode(t);
                return $("<li></li>")
                    //.data("item.autocomplete", item)
                    .append("<a href='"+showLinkToResultSearch+"'><span>" + t + "</span></a>")
                    .appendTo(ul);
            };
        });
    </script>
    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.SearchBox })
</form>